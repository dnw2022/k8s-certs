name: Deploy to Digital Ocean Kubernetes Service (DOKS)

on:
  workflow_dispatch:
  push:
    branches:
      - master

env:
  DOCKER_ID: dnw2022
  DOCKER_PASSWORD: ${{ secrets.DOCKER_HUB_TOKEN }}
  DO_ACCESS_TOKEN: ${{ secrets.DO_ACCESS_TOKEN }}
  DO_CLUSTER_NAME: cluster-dnw
  REGISTRY: registry.digitalocean.com
  REPO: dnw2022
  IMAGE: default-backend
  TAG: latest

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ env.DO_ACCESS_TOKEN }}

      - name: Login to Digital Ocean Container Registry (DOCR)
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ env.DO_ACCESS_TOKEN }}
          password: ${{ env.DO_ACCESS_TOKEN }}

      - name: Set environment variables
        run: |
          echo 'IMAGE_TAG="${{ env.REPO }}/${{ env.IMAGE }}:${{ env.TAG }}"' >> $GITHUB_ENV
          # registry.digitalocean.com/dnw2022/default-backend:latest
          echo 'REGISTRY_TAG="${{ env.REGISTRY }}/${{ env.REPO }}/${{ env.IMAGE }}:${{ env.TAG }}"' >> $GITHUB_ENV

      - name: Create images
        run: |-
          echo $IMAGE_TAG
          docker build -t $IMAGE_TAG -f ./default-backend/Dockerfile ./default-backend
          # docker tag $IMAGE_TAG $REGISTRY_TAG
          # docker push $REGISTRY_TAG

      - name: Save DigitalOcean kubeconfig
        run: doctl kubernetes cluster kubeconfig save ${{ env.DO_CLUSTER_NAME }}

      - name: Store secrets with certificates in cluster
        run: |-
          # apply yml with the secret containing the dotnet-works.com wildcard cert 
          echo "${{ secrets.DNW_CERT_SECRET }}" | base64 --decode > ./dnw-cert-secret.yml
          kubectl apply -f ./dnw-cert-secret.yml

          # apply yml with the secret containing the freelancedirekt.nl wildcard cert 
          echo "${{ secrets.FLD_CERT_SECRET }}" | base64 --decode > ./fld-cert-secret.yml
          kubectl apply -f ./fld-cert-secret.yml

      - name: Deploy to DOKS
        run: |-
          kubectl apply -f k8s
          kubectl rollout restart deployment default-backend-deployment
          kubectl rollout restart deployment my-release-ingress-nginx-controller

      # - name: Deploy to DOKS
      #   run: |-
      #     chmod +x ./setup-certs.sh
      #     ./setup-certs.sh