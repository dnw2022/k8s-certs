{{- if .Values.IstioGatewayEnabled -}}
{{- $gatewayName := $.Values.IstioGatewayName -}}
apiVersion: networking.istio.io/v1alpha3
kind: Gateway
metadata:
  name: {{ $gatewayName }}
  namespace: istio-system
spec:
  selector:
    istio: ingressgateway
  servers:
  {{- range $domainName := $.Values.Domains }}
  {{- $domainNameWithoutDots := regexReplaceAll "\\." $domainName "-" }}
  - port:
      number: 443
      name: https-{{ $domainNameWithoutDots }}
      protocol: HTTPS
    tls:
      mode: SIMPLE
      credentialName: {{ $domainNameWithoutDots }}-wildcard-tls
    hosts:
    - "*.{{ $domainName }}"
  # - port:
  #     number: 80
  #     name: http-{{ $domainNameWithoutDots }}
  #     protocol: HTTP
  #   hosts:
  #   - "*.{{ $domainName }}"
  {{- end }}
---
{{- range $domainName := $.Values.Domains }}
{{- $domainNameWithoutDots := regexReplaceAll "\\." $domainName "-" }}
# This Ingress resource tricks cert-manager in creating missing certificates
# Since there is no ingress-nginx controller when using the istio gateway, the defaultBackend in the spec
# does not actually do anything 
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: default-{{ $domainNameWithoutDots }}-ingress
  # This should be the namespace of the default-backend-service
  # if this should actually be working configuration
  namespace: '{{ $.Values.IngressNamespace }}'
  annotations:
    nginx.ingress.kubernetes.io/use-regex: 'true'
    nginx.ingress.kubernetes.io/rewrite-target: /
    cert-manager.io/cluster-issuer: '{{ $.Values.CertIssuer }}'
    nginx.ingress.kubernetes.io/ssl-redirect: 'true'
spec:
  ingressClassName: 'nginx'
  tls:
  - hosts:
    - '*.{{ $domainName }}'
    - '{{ $domainName }}'
    secretName: {{ $domainNameWithoutDots }}-wildcard-tls
  defaultBackend:
    service:
      # we cannot specify here in which namespace the default-backend-service is
      # trying to do so results in an error when installing the helm template
      name: {{ $.Values.DefaultBackendService }}
      port:
        number: {{ $.Values.DefaultBackendPort }}
---
{{- end }}
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: default-vs
  namespace: istio-system
spec:
  hosts:
  {{- range $domainName := $.Values.Domains }}
  - "*.{{ $domainName }}"
  {{- end }}
  gateways:
  - {{ $gatewayName }}
  http:
  - match:
    - uri:
        regex: /?(.*)
    rewrite:
      uri: "/"
    route:
    - destination:
        host: {{ $.Values.DefaultBackendServiceFqn }}
        port:
          number: {{ $.Values.DefaultBackendPort }}
---
{{- range $addOn := $.Values.IstioAddOns }}
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: {{ $addOn.Name }}-vs
  namespace: istio-system
spec:
  hosts:
  {{- range $domain := $.Values.Domains }}
  - "{{ $addOn.Name }}.{{ $domain }}"
  {{- end }}
  gateways:
  - {{ $gatewayName }}
  http:
  - route:
    - destination:
        host: {{ $addOn.Name }}.istio-system.svc.cluster.local
        port:
          number: {{ $addOn.Port }}
---
{{- end }}
{{- end }}